{"version":3,"file":"federate.js","sourceRoot":"","sources":["../src/federate.ts"],"names":[],"mappings":";;AAWA,4BAsBC;AA/BD,+EAA0E;AAC1E,2DAAqE;AACrE,uDAAmE;AAEnE;;;;GAIG;AACH,SAAgB,QAAQ,CAAC,MAAsB;IAC7C,MAAM,SAAS,GAAI,YAAY,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,CAAC;IAErG,OAAO,UAAS,QAA0B;QACxC,IAAI,CAAC;YAEH,IAAI,MAAM,CAAC,KAAK;gBAAE,IAAA,qBAAO,EAAC,oBAAoB,EAAE,+BAA+B,CAAC,CAAA;YAEhF,MAAM,cAAc,GAAG,IAAA,6CAAoB,EAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YAC/D,MAAM,mBAAmB,GAAG,IAAA,wCAAyB,EAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YACzE,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAC7B,QAAQ,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YAElC,IAAI,MAAM,CAAC,KAAK;gBAAE,IAAA,qBAAO,EAAC,oBAAoB,EAAE,0BAA0B,CAAC,CAAA;QAC7E,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAA,sBAAQ,EAAC,oBAAoB,EAAE,kCAAkC,GAAG,MAAM,CAAE,KAAe,CAAC,OAAO,CAAC,CAAC,CAAC;YACtG,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;gBACjB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACvB,CAAC;YACD,IAAA,sBAAQ,EAAC,oBAAoB,EAAE,2BAA2B,CAAC,CAAC;QAC9D,CAAC;IACH,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import FlatfileListener from \"@flatfile/listener\";\nimport { FederateConfig } from \"./types\";\nimport { createFederateAction } from \"./listeners/create-federate-action\";\nimport { createFederateJobListener } from \"./listeners/federate-job\";\nimport { logError, logInfo, logWarn } from \"@flatfile/util-common\";\n\n/**\n * Creates a federated workbook from a source workbook\n * @param config - Configuration for the federation process\n * @returns A Flatfile plugin function\n */\nexport function federate(config: FederateConfig) {\n  const operation =  `federate-${config.source_workbook_name.trim().toLowerCase().replace(/ /g, \"-\")}`;\n  \n  return function(listener: FlatfileListener) {\n    try {\n\n      if (config.debug) logInfo(\"ðŸ“¦ Federate Plugin\", \"Federate Plugin processing...\")\n\n      const federateAction = createFederateAction(config, operation);\n      const federateJobListener = createFederateJobListener(config, operation);\n      listener.use(federateAction);\n      listener.use(federateJobListener);\n\n      if (config.debug) logInfo(\"ðŸ“¦ Federate Plugin\", \"Federate Plugin enabled.\")\n    } catch (error) {\n      logError(\"ðŸ“¦ Federate Plugin\", \"Error creating federate action: \" + String((error as Error).message));\n      if (config.debug) {\n        console.error(error);\n      }\n      logError(\"ðŸ“¦ Federate Plugin\", \"Federate Plugin disabled.\");\n    }\n  };\n} "]}